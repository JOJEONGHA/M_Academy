메뉴는 의미론적이든 관리측면에서 ul li 를 사용하는것이 유리하다.

클레스 타고들어가서 선택할 땐 가장큰 클레스는 적어줘야한다. 내부에서도 갈릴수 있으니 자세히 적어주는것이 좋을것 같다. 그리고 > + 의 형제 자식 선택자는 사용해주자. 단순히 띄어쓰기로 사용하면 꼬일 확률이 크다.

ul li 글자 색을 주더라도 a로 감싸져있는것은 영향이없더라.

padding 과 margin 의 차이

그냥 태그보다 li + li 이게 더 먹힌다

li + li{blue}
li { red}
이 순서대로 하면 첫 li 이왜에는 모두 blue 가 된다.

padding 을 주는 이유는 a태그의 링크영역을 확보하기 위함이다.

li영역에 padding을 주게 되면 a 태그의 영역이 아니기 때문에 클릭영역이 줄어든다. 따라서 a태그의 영역에 패딩을 주어 클릭영역을 확보하는것이 우선이다.

테이블같이 보이는 구조는 ul li 로 제작한 경우가 많다.

dl dt dd 태그???!!!@!
dt 태그는 정의, dd 태그는 설명, 전체 dl 은 div 로 묶어준다. 방탄앱!!!! 그리고 
dl dt,dd은
ul li 와 비슷한 구조를 갖는것으로 보인다.

< flex >
 * float : 해지해야한다, 좌우측배치만가능하다.
 * position : height를 무시
화면을 특정비율에 맞게 알아서 나눈다.

flex : 숫자; 자식에 부여. 자식들이 숫자에 맞게 균등하게 부여된다.
flex의 속성
 align-items : center - 
 justify-content : center - margin 0 auto 와 유사하다.
 flex-direction : column 옆으로 붙어있다가 밑으로 바뀌, 반응형 같은거
 (자식)order: 숫자;  : 순서를 바꿀수 있다
 플랙스는 반응형 제작에 유용하게 작용한다.

.frm_col .co1{width : calc(100%/1)}
.frm_col .co2{width : calc(100%/2)}
.frm_col .co3{width : calc(100%/3)}
이렇게 만들어 ui를 만들어 놓으면 이제 필요에 따라 쓰면되는거다.!!

클래스에 따라서 스타일이 바껴야한다. 이런식으로 내가 필요하면 타입을 분기해서 만들어 가야한다, 상속!!! 이게 모든 걸 통틀은 핵심!!!!

table, table-cell 

id랑 태그에 직접 스타일 준거랑 어떤게 우선순위가 높을까??
